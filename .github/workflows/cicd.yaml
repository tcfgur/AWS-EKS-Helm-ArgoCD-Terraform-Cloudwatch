name: UK Case Project
on:
  push:
    branches:  
      - "main"
jobs: 
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: eu-central-1
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 533267417178.dkr.ecr.eu-central-1.amazonaws.com
          aws_password=$(aws ecr get-login-password)
          export aws_password
          envsubst < ArgoCD/repo.yaml > ArgoCD/repo.yaml.new
          mv ArgoCD/repo.yaml.new ArgoCD/repo.yaml
      - name: Build Backend
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 533267417178.dkr.ecr.eu-central-1.amazonaws.com
          docker build -t backend -f app/backend/Dockerfile app/backend
          docker tag backend:latest 533267417178.dkr.ecr.eu-central-1.amazonaws.com/backend:latest
          docker push 533267417178.dkr.ecr.eu-central-1.amazonaws.com/backend:latest
      - name: Helm Package Backend
        run: |
          helm package Helm/backend/
          aws ecr get-login-password --region eu-central-1 | helm registry login 533267417178.dkr.ecr.eu-central-1.amazonaws.com --username AWS --password-stdin
          export HELM_EXPERIMENTAL_OCI=1
          aws ecr describe-repositories --repository-names backend || aws ecr create-repository --repository-name backend
          helm push *.tgz oci://533267417178.dkr.ecr.eu-central-1.amazonaws.com
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.2
      - name: Terraform Init
        run: terraform init
        working-directory: Terraform
      #- #name: Terraform Plan
      #  r#un: terraform plan 
      #  working-directory: Terraform
      - name: Terraform Apply
        run: terraform apply -auto-approve 
        working-directory: Terraform
      - name: Deploy ArgoCD job
        run: |
          aws sts get-caller-identity
          clusters=$(aws eks list-clusters --query 'clusters' --output text)
          first_cluster=$(echo $clusters | awk '{print $1}')
          cluster_name=$first_cluster
          aws eks --region eu-central-1 update-kubeconfig --name $cluster_name
          kubectl apply -f ArgoCD/serviceaccount.yaml
          kubectl apply -f ArgoCD/repo.yaml
          kubectl apply -f ArgoCD/backendjob.yaml
  Deployment: 
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: eu-central-1
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: |
          aws sts get-caller-identity
          clusters=$(aws eks list-clusters --query 'clusters' --output text)
          first_cluster=$(echo $clusters | awk '{print $1}')
          cluster_name=$first_cluster
          aws eks --region eu-central-1 update-kubeconfig --name $cluster_name
      - name: Build Frontend  
        run: | 
          endpoint_url=$(kubectl get svc backend -o=jsonpath='{.status.loadBalancer.ingress[0].ip}')
          export endpoint_url
          envsubst < app/frontend/index.html > app/frontend/index.html.new
          mv app/frontend/index.html.new app/frontend/index.html
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 533267417178.dkr.ecr.eu-central-1.amazonaws.com
          docker build -t backend -f app/frontend/Dockerfile app/frontend
          docker tag frontend:latest 533267417178.dkr.ecr.eu-central-1.amazonaws.com/backend:latest
          docker push 533267417178.dkr.ecr.eu-central-1.amazonaws.com/frontend:latest
      - name: Helm Package Frontend
        run: |
          helm package Helm/frontend/
          aws ecr get-login-password --region eu-central-1 | helm registry login 533267417178.dkr.ecr.eu-central-1.amazonaws.com --username AWS --password-stdin
          export HELM_EXPERIMENTAL_OCI=1
          aws ecr describe-repositories --repository-names frontend || aws ecr create-repository --repository-name frontend
          helm push *.tgz oci://533267417178.dkr.ecr.eu-central-1.amazonaws.com
      - name: Deploy ArgoCD Frontend
        run: |
          kubectl apply -f ArgoCD/frontendjob.yaml